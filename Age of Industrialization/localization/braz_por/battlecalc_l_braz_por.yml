l_braz_por:
 concept_battlecalc_width: "Battle Width"
 concept_battlecalc_width_desc: "The [concept_battlecalc_width] of a battle is determined by the formula (5 * [concept_state] [concept_infrastructure] * [concept_combat_width]) / 2. This is the baseline maximum number of [Concept('concept_battalion', '$concept_battalions$')] that may be deployed by either side. If one side's [concept_offense]/[concept_defense] exceeds that of the other side, then the side with worse [concept_offense]/[concept_defense] gains a multiplicative [concept_battlecalc_techbonus] to its [concept_battlecalc_width]."
 BATTLE_TERRAIN_BATTLECALC: "[concept_terrain]: [Battle.GetTerrain], #tooltippable #tooltip:[Battle.GetProvince.GetState.GetTooltipTag],STATE_INFRASTRUCTURE_TOOLTIP [Battle.GetProvince.GetState.GetInfrastructure|0]#!#! [concept_infrastructure]"
 BATTLE_TERRAIN_BATTLECALC_ALL_TERRAIN: "[concept_battlecalc_width]: #tooltippable #tooltip:[Battle.GetTooltipTag],BATTLECALC_TERRAIN_WIDTH_TOOLTIP $BATTLECALC_TERRAIN_MAX$#!#! [Concept('concept_battalion', '$concept_battalions$')]"
 BATTLECALC_TERRAIN_MAX_OLD: "[Multiply_CFixedPoint(GetGlobalVariable(Concatenate('battlecalc_tw_', Battle.GetTerrain)).GetValue,Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5')))|0]"
 BATTLECALC_TERRAIN_MAX_ATK_OLD: "[Multiply_CFixedPoint(Multiply_CFixedPoint(GetGlobalVariable(Concatenate('battlecalc_tw_', Battle.GetTerrain)).GetValue,Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))), Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), Min_CFixedPoint('(CFixedPoint)3', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.3', Multiply_CFixedPoint(Battle.GetDefenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetOffenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'))|0]"
 BATTLECALC_TERRAIN_MAX_DEF_OLD: "[Multiply_CFixedPoint(Multiply_CFixedPoint(GetGlobalVariable(Concatenate('battlecalc_tw_', Battle.GetTerrain)).GetValue,Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))), Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetOffenseRaw, Battle.GetDefenseRaw), Min_CFixedPoint('(CFixedPoint)2', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.2', Multiply_CFixedPoint(Battle.GetOffenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetDefenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'))|0]"
 BATTLECALC_TERRAIN_MIN_ATK_OLD: "[Multiply_CFixedPoint(GetGlobalVariable('battlecalc_minluck_attacker').GetValue, Multiply_CFixedPoint(GetGlobalVariable(Concatenate('battlecalc_tw_', Battle.GetTerrain)).GetValue,Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))))|0]"
 BATTLECALC_TERRAIN_MIN_DEF_OLD: "[Multiply_CFixedPoint(GetGlobalVariable('battlecalc_minluck_defender').GetValue, Multiply_CFixedPoint(GetGlobalVariable(Concatenate('battlecalc_tw_', Battle.GetTerrain)).GetValue,Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))))|0]"
 BATTLECALC_TERRAIN_MAX: "[Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5')))|0]"
 BATTLECALC_TERRAIN_MAX_ATK: "[Min_float(FixedPointToFloat(Multiply_CFixedPoint(Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))), Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), Min_CFixedPoint('(CFixedPoint)3', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.3', Multiply_CFixedPoint(Battle.GetDefenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetOffenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'))), IntToFloat(Select_int32(Battle.GetAttackerCommander.HasNavalInvasionPlan, Battle.GetAttackerCommander.GetNumCombatUnits, Select_int32(Battle.GetFront.IsParticipantInFirst(Battle.GetAttacker), Subtract_int32(Battle.GetFront.GetNumFirstCombatUnits, Battle.GetFront.GetNumFirstGarrisonUnitsRaw), Subtract_int32(Battle.GetFront.GetNumSecondCombatUnits, Battle.GetFront.GetNumSecondGarrisonUnitsRaw)))))|0]"
 BATTLECALC_TERRAIN_MAX_ATK_INF_TROOPS: "[Multiply_CFixedPoint(Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))), Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), Min_CFixedPoint('(CFixedPoint)3', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.3', Multiply_CFixedPoint(Battle.GetDefenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetOffenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0')))|0]"
 BATTLECALC_TERRAIN_MAX_DEF: "[Min_float(FixedPointToFloat(Multiply_CFixedPoint(Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))), Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetOffenseRaw, Battle.GetDefenseRaw), Min_CFixedPoint('(CFixedPoint)2', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.2', Multiply_CFixedPoint(Battle.GetOffenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetDefenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'))), IntToFloat(Select_int32(Battle.GetAttackerCommander.HasNavalInvasionPlan, Battle.GetDefenderCommander.GetCurrentHQ.GetHomeGarrisonUnits, Select_int32(Battle.GetFront.IsParticipantInFirst(Battle.GetDefender), Battle.GetFront.GetNumFirstCombatUnits, Battle.GetFront.GetNumSecondCombatUnits))))|0]"
 BATTLECALC_TERRAIN_MAX_DEF_INF_TROOPS: "[Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5'))), Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetOffenseRaw, Battle.GetDefenseRaw), Min_CFixedPoint('(CFixedPoint)2', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.2', Multiply_CFixedPoint(Battle.GetOffenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetDefenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'))|0]"
 BATTLECALC_TERRAIN_MIN_ATK: "[Max_float('(float)1', Multiply_float(FixedPointToFloat(EmptyScope.ScriptValue('battlecalc_sv_minluck_attacker')), Min_float(IntToFloat(Select_int32(Battle.GetFront.IsParticipantInFirst(Battle.GetAttacker), Subtract_int32(Battle.GetFront.GetNumFirstCombatUnits, Battle.GetFront.GetNumFirstGarrisonUnitsRaw), Subtract_int32(Battle.GetFront.GetNumSecondCombatUnits, Battle.GetFront.GetNumSecondGarrisonUnitsRaw))), FixedPointToFloat(Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5')))))))|0]"
 BATTLECALC_TERRAIN_MIN_DEF: "[Max_float('(float)1', Multiply_float(FixedPointToFloat(EmptyScope.ScriptValue('battlecalc_sv_minluck_defender')), Min_float(IntToFloat(Select_int32(Battle.GetFront.IsParticipantInFirst(Battle.GetDefender), Battle.GetFront.GetNumFirstCombatUnits, Battle.GetFront.GetNumSecondCombatUnits)), FixedPointToFloat(Multiply_CFixedPoint(EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain)),Add_CFixedPoint('(CFixedPoint)5', Multiply_CFixedPoint(Battle.GetProvince.GetState.GetInfrastructure, '(CFixedPoint)0.5')))))))|0]"
 BATTLECALC_TERRAIN_WINDOW_ATK: "$BATTLECALC_TERRAIN_MIN_ATK$ - $BATTLECALC_TERRAIN_MAX_ATK$"
 BATTLECALC_TERRAIN_WINDOW_DEF: "$BATTLECALC_TERRAIN_MIN_DEF$ - $BATTLECALC_TERRAIN_MAX_DEF$"
 BATTLECALC_TECH_BONUS_ATK_RAW: "[Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), Min_CFixedPoint('(CFixedPoint)3', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.3', Multiply_CFixedPoint(Battle.GetDefenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetOffenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0')|2]"
 BATTLECALC_TECH_BONUS_ATK: "x $BATTLECALC_TECH_BONUS_ATK_RAW$"
 BATTLECALC_TECH_BONUS_ATK_PERCENT: "[Multiply_CFixedPoint(Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), Min_CFixedPoint('(CFixedPoint)3', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.3', Multiply_CFixedPoint(Battle.GetDefenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetOffenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'), '(CFixedPoint)100')|0]"
 BATTLECALC_TECH_BONUS_DEF_RAW: "[Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetOffenseRaw, Battle.GetDefenseRaw), Min_CFixedPoint('(CFixedPoint)2', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.2', Multiply_CFixedPoint(Battle.GetOffenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetDefenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0')|2]"
 BATTLECALC_TECH_BONUS_DEF: "x $BATTLECALC_TECH_BONUS_DEF_RAW$"
 BATTLECALC_TECH_BONUS_DEF_PERCENT: "[Multiply_CFixedPoint(Select_CFixedPoint(GreaterThan_CFixedPoint(Battle.GetOffenseRaw, Battle.GetDefenseRaw), Min_CFixedPoint('(CFixedPoint)2', Max_CFixedPoint('(CFixedPoint)1', Add_CFixedPoint('(CFixedPoint)1', Multiply_CFixedPoint('(CFixedPoint)0.2', Multiply_CFixedPoint(Battle.GetOffenseRaw, GuiScope.SetRoot(MakeScopeValue(Battle.GetDefenseRaw)).ScriptValue('battlecalc_divide_stats_2')))))), '(CFixedPoint)1.0'), '(CFixedPoint)100')|0]"
 BATTLECALC_TECH_BONUS_LABEL: "From worse stats:"
 BATTLECALC_TERRAIN_WIDTH_PERMITS: "Could have brought"
 BATTLECALC_WORSE_STATS_BAR_TOOLTIP: "This is just for spacing"
 BATTLECALC_TERRAIN_WIDTH_BAR_TOOLTIP: "This is just for spacing"
 # updated 15 Nov 2022
 concept_commanders: "Commanders"
 concept_battlecalc_techbonus: "Worse Stats Bonus"
 concept_battlecalc_techbonus_desc: "[Concept('concept_commander', '$concept_commanders$')] with a lower [concept_offense] that the enemy's [concept_defense] may bring additional [Concept('concept_battalion', '$concept_battalions$')] above the [concept_battlecalc_width] when attacking, and vice versa when defending, up to the [concept_battlecalc_techbonus]."
 BATTLECALC_ATK_MINLUCK_PERCENT_STR: "[Multiply_CFixedPoint(EmptyScope.ScriptValue('battlecalc_sv_minluck_attacker'), '(CFixedPoint)100')|0]"
 BATTLECALC_DEF_MINLUCK_PERCENT_STR: "[Multiply_CFixedPoint(EmptyScope.ScriptValue('battlecalc_sv_minluck_defender'), '(CFixedPoint)100')|0]"
 BATTLECALC_COULD_HAVE_ATK_TOOLTIP: "[Battle.GetAttackerCommander.GetRankTitle] [Battle.GetAttackerCommander.GetFullName] may bring between $BATTLECALC_ATK_MINLUCK_PERCENT_STR$% and 100% of the lower of:\n- $BATTLECALC_TERRAIN_MAX_ATK_INF_TROOPS$ [Concept('concept_battalion', '$concept_battalions$')] (the [concept_battlecalc_width] of $BATTLECALC_TERRAIN_MAX$ [Concept('concept_battalion', '$concept_battalions$')] $BATTLECALC_TECH_BONUS_ATK$ [concept_battlecalc_techbonus])\n- [Select_int32(Battle.GetFront.IsParticipantInFirst(Battle.GetAttacker), Subtract_int32(Battle.GetFront.GetNumFirstCombatUnits, Battle.GetFront.GetNumFirstGarrisonUnitsRaw), Subtract_int32(Battle.GetFront.GetNumSecondCombatUnits, Battle.GetFront.GetNumSecondGarrisonUnitsRaw))|0] [Concept('concept_battalion', '$concept_battalions$')] (the number of battalions on their side of the [concept_front]). \n\n $BATTLECALC_ARMY_ASSIGNMENT_WARNING$ $BATTLECALC_ARMY_ORDER_WARNING$." 
 BATTLECALC_COULD_HAVE_DEF_TOOLTIP: "[Battle.GetDefenderCommander.GetRankTitle] [Battle.GetDefenderCommander.GetFullName] may bring between $BATTLECALC_DEF_MINLUCK_PERCENT_STR$% and 100% of the lower of:\n- $BATTLECALC_TERRAIN_MAX_DEF_INF_TROOPS$ [Concept('concept_battalion', '$concept_battalions$')] (the [concept_battlecalc_width] of $BATTLECALC_TERRAIN_MAX$ [Concept('concept_battalion', '$concept_battalions$')] $BATTLECALC_TECH_BONUS_DEF$ [concept_battlecalc_techbonus])\n- [Select_int32(Battle.GetFront.IsParticipantInFirst(Battle.GetDefender), Battle.GetFront.GetNumFirstCombatUnits, Battle.GetFront.GetNumSecondCombatUnits)|0] [Concept('concept_battalion', '$concept_battalions$')] (the number of battalions on their side of the [concept_front]). \n\n $BATTLECALC_ARMY_ASSIGNMENT_WARNING$."
 BATTLECALC_ARMY_ASSIGNMENT_WARNING: "CAUTION: may be inaccurate if the [Concept('concept_commander', '$concept_commanders$')] assigned to the [concept_front] have changed since the [concept_battle] started"

 BATTLECALC_ARMY_ORDER_WARNING: "or if some [Concept('concept_commander', '$concept_commanders$')] on the [concept_front] have been assigned to 'Defend Front'"
 BATTLECALC_WORSE_STATS_ATK_TOOLTIP: "The maximum number of [Concept('concept_battalion', '$concept_battalions$')] the attacker may bring is the [concept_battlecalc_width] $BATTLECALC_TECH_BONUS_ATK$, because their [concept_offense] stat of [Battle.GetOffenseRaw|0] is [Select_CString(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), 'worse', 'better')] than the defender's [concept_defense] stat of [Battle.GetDefenseRaw|0]."
 BATTLECALC_WORSE_STATS_DEF_TOOLTIP: "The maximum number of [Concept('concept_battalion', '$concept_battalions$')] the defender may bring is the [concept_battlecalc_width] $BATTLECALC_TECH_BONUS_DEF$, because their [concept_defense] stat of [Battle.GetDefenseRaw|0] is [Select_CString(GreaterThan_CFixedPoint(Battle.GetDefenseRaw, Battle.GetOffenseRaw), 'better', 'worse')] than the attacker's [concept_offense] stat of [Battle.GetOffenseRaw|0]."
 BATTLECALC_TERRAIN_WIDTH_TOOLTIP: "Battles in this state have a baseline [concept_battlecalc_width] of (5 x [Battle.GetProvince.GetState.GetInfrastructure|0] [concept_infrastructure] * [EmptyScope.ScriptValue(Concatenate('battlecalc_tw_sv_', Battle.GetTerrain))] [concept_combat_width]) / 2 = $BATTLECALC_TERRAIN_MAX$ [Concept('concept_battalion', '$concept_battalions$')]."
 
 
 BATTLECALC_ENTIRE_ARMY_TEXT: "Soldiers Fielded"
 BATTLECALC_ENTIRE_FLEET_TEXT: "Sailors at Sea"
 concept_demoralized: "Demoralized"
 BATTLECALC_ENTIRE_ARMY_TOOLTIP: "Total personnel present at the [concept_battle], including [Concept('concept_morale', '$concept_demoralized$')] personnel. First number is current, second number is from when the battle began.\n\n CAUTION: Number from when the battle began is inaccurate if the battle started before the save was loaded."
 BATTLECALC_ENTIRE_ARMY_ATK_INITIAL: "[Multiply_float(IntToFloat(Battle.GetStartingAttackerManpower), FixedPointToFloat(Select_CFixedPoint(LessThanOrEqualTo_CFixedPoint(Battle.GetInitialAttackerMorale, '(CFixedPoint)0'), Select_CFixedPoint(LessThanOrEqualTo_CFixedPoint(Battle.CalcCurrentAttackerMorale, '(CFixedPoint)0'), '(CFixedPoint)1', GuiScope.SetRoot(MakeScopeValue(Battle.CalcCurrentAttackerMorale)).ScriptValue('battlecalc_divide_stats_2')), GuiScope.SetRoot(MakeScopeValue(Battle.GetInitialAttackerMorale)).ScriptValue('battlecalc_divide_stats_2'))))|0]"
 BATTLECALC_ENTIRE_ARMY_ATK_CURRENT: "[Multiply_float(IntToFloat(Battle.CalcCurrentAttackerManpower), FixedPointToFloat(Select_CFixedPoint(LessThanOrEqualTo_CFixedPoint(Battle.CalcCurrentAttackerMorale, '(CFixedPoint)0'), '(CFixedPoint)1', GuiScope.SetRoot(MakeScopeValue(Battle.CalcCurrentAttackerMorale)).ScriptValue('battlecalc_divide_stats_2'))))|0]"
 BATTLECALC_ENTIRE_ARMY_ATK: "$BATTLECALC_ENTIRE_ARMY_ATK_CURRENT$ left of $BATTLECALC_ENTIRE_ARMY_ATK_INITIAL$"
 BATTLECALC_ENTIRE_ARMY_ATK_TOOLTIP: "$BATTLECALC_ENTIRE_ARMY_TOOLTIP$"
 BATTLECALC_ENTIRE_ARMY_DEF_INITIAL: "[Multiply_float(IntToFloat(Battle.GetStartingDefenderManpower), FixedPointToFloat(Select_CFixedPoint(LessThanOrEqualTo_CFixedPoint(Battle.GetInitialDefenderMorale, '(CFixedPoint)0'), Select_CFixedPoint(LessThanOrEqualTo_CFixedPoint(Battle.CalcCurrentDefenderMorale, '(CFixedPoint)0'), '(CFixedPoint)1', GuiScope.SetRoot(MakeScopeValue(Battle.CalcCurrentDefenderMorale)).ScriptValue('battlecalc_divide_stats_2')), GuiScope.SetRoot(MakeScopeValue(Battle.GetInitialDefenderMorale)).ScriptValue('battlecalc_divide_stats_2'))))|0]"
 BATTLECALC_ENTIRE_ARMY_DEF_CURRENT: "[Multiply_float(IntToFloat(Battle.CalcCurrentDefenderManpower), FixedPointToFloat(Select_CFixedPoint(LessThanOrEqualTo_CFixedPoint(Battle.CalcCurrentDefenderMorale, '(CFixedPoint)0'), '(CFixedPoint)1', GuiScope.SetRoot(MakeScopeValue(Battle.CalcCurrentDefenderMorale)).ScriptValue('battlecalc_divide_stats_2'))))|0]"
 BATTLECALC_ENTIRE_ARMY_DEF: "$BATTLECALC_ENTIRE_ARMY_DEF_CURRENT$ left of $BATTLECALC_ENTIRE_ARMY_DEF_INITIAL$"
 BATTLECALC_ENTIRE_ARMY_DEF_TOOLTIP: "$BATTLECALC_ENTIRE_ARMY_TOOLTIP$"
 BATTLECALC_VARIABLE_TEST_NAME: "'battlecalc_testvar'"
 battlecalc.1001.a: "[GetGlobalVariable($BATTLECALC_VARIABLE_TEST_NAME$).GetValue]"
 battlecalc.1001.b: "[GetGlobalVariable('BATTLECALC_VARIABLE_TEST_NAME').GetValue]"
 BATTLECALC_ATK_COMMANDER_ID: "[Battle.GetAttackerCommander.GetID]"
#  battlecalc.1001.a: "[GetGlobalVariable('battlecalc_testvar').GetValue]"
 BATTLECALC_CHAR_NAME_TEST: "[THIS.GetName]"